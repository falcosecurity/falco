# This is a reusable workflow used by master and release CI
on:
  workflow_call:
    inputs:
      tag:
        description: The tag to push
        required: true
        type: string
      is_latest:
        description: Update the latest tag with the new image
        required: false
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read
  
jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Download images tarballs
        uses: actions/download-artifact@v3
        with:
          name: falco-images
          path: /tmp/falco-images
      
      - name: Load all images
        run: |
          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done
    
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::292999226676:role/github_actions-falco-ecr"
          aws-region: us-east-1 # The region must be set to us-east-1 in order to access ECR Public.
          
      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1.6.0
        with:
          registry-type: public    
          
      - name: Create and push no-driver manifest
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco-no-driver:${{ inputs.tag }}
          images: falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }},falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}
          push: true
          
      - name: Create and push slim manifest
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco:${{ inputs.tag }}-slim
          images: falcosecurity/falco:aarch64-${{ inputs.tag }}-slim,falcosecurity/falco:x86_64-${{ inputs.tag }}-slim
          push: true     
          
      - name: Create and push no-driver manifest for ecr
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco-no-driver:${{ inputs.tag }}
          images: public.ecr.aws/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }},public.ecr.aws/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}
          push: true
          
      - name: Create and push slim manifest for ecr
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco:${{ inputs.tag }}-slim
          images: public.ecr.aws/falcosecurity/falco:aarch64-${{ inputs.tag }}-slim,public.ecr.aws/falcosecurity/falco:x86_64-${{ inputs.tag }}-slim
          push: true      

      - name: Create and push no-driver latest manifest
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco-no-driver:latest
          images: falcosecurity/falco-no-driver:aarch64-latest,falcosecurity/falco-no-driver:x86_64-latest
          push: true
          
      - name: Create and push slim latest manifest
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco:latest-slim
          images: falcosecurity/falco:aarch64-latest-slim,falcosecurity/falco:x86_64-latest-slim
          push: true
          
      - name: Create and push no-driver latest manifest for ecr
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco-no-driver:latest
          images: public.ecr.aws/falcosecurity/falco-no-driver:aarch64-latest,public.ecr.aws/falcosecurity/falco-no-driver:x86_64-latest
          push: true
          
      - name: Create and push slim latest manifest for ecr
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco:latest-slim
          images: public.ecr.aws/falcosecurity/falco:aarch64-latest-slim,public.ecr.aws/falcosecurity/falco:x86_64-latest-slim
          push: true        
    
      - name: Create and push falco manifest
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco:${{ inputs.tag }}
          images: falcosecurity/falco:aarch64-${{ inputs.tag }},falcosecurity/falco:x86_64-${{ inputs.tag }}
          push: true
          
      - name: Create and push falco manifest for ecr
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco:${{ inputs.tag }}
          images: public.ecr.aws/falcosecurity/falco:aarch64-${{ inputs.tag }},public.ecr.aws/falcosecurity/falco:x86_64-${{ inputs.tag }}
          push: true    
      
      - name: Create and push falco latest manifest
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco:latest
          images: falcosecurity/falco:aarch64-latest,falcosecurity/falco:x86_64-latest
          push: true
          
      - name: Create and push falco latest manifest for ecr
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco:latest
          images: public.ecr.aws/falcosecurity/falco:aarch64-latest,public.ecr.aws/falcosecurity/falco:x86_64-latest
          push: true  
          
      - name: Create and push falco-driver-loader manifest
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco-driver-loader:${{ inputs.tag }}
          images: falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }},falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}
          push: true
          
      - name: Create and push falco-driver-loader manifest for ecr
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco-driver-loader:${{ inputs.tag }}
          images: public.ecr.aws/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }},public.ecr.aws/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}
          push: true    
      
      - name: Create and push falco-driver-loader latest manifest
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: falcosecurity/falco-driver-loader:latest
          images: falcosecurity/falco-driver-loader:aarch64-latest,falcosecurity/falco-driver-loader:x86_64-latest
          push: true
          
      - name: Create and push falco-driver-loader latest manifest for ecr
        if: ${{ inputs.is_latest }}
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: public.ecr.aws/falcosecurity/falco-driver-loader:latest
          images: public.ecr.aws/falcosecurity/falco-driver-loader:aarch64-latest,public.ecr.aws/falcosecurity/falco-driver-loader:x86_64-latest
          push: true      
